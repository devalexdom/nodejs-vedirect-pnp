/// <reference types="node" />
import { Transform } from "stream";
export declare class VEDirectData {
    V: number;
    V2?: number;
    V3?: number;
    VS?: number;
    VM?: number;
    DM?: number;
    VPV?: number;
    PPV?: number;
    I?: number;
    I2?: number;
    I3?: number;
    IL?: number;
    P?: number;
    T?: number;
    CE?: number;
    SOC?: number;
    TTG?: number;
    AR?: number;
    OR?: number;
    H1?: number;
    H2?: number;
    H3?: number;
    H4?: number;
    H5?: number;
    H6?: number;
    H7?: number;
    H8?: number;
    H9?: number;
    H10?: number;
    H11?: number;
    H12?: number;
    H13?: number;
    H14?: number;
    H15?: number;
    H16?: number;
    H17?: number;
    H18?: number;
    H19?: number;
    H20?: number;
    H21?: number;
    H22?: number;
    H23?: number;
    ERR?: number;
    CS?: number;
    BMV?: number;
    FW?: number;
    FWE?: number;
    PID?: number;
    HSDS?: number;
    MODE?: number;
    MON?: number;
    AC_OUT_V?: number;
    AC_OUT_I?: number;
    AC_OUT_S?: number;
    WARN?: number;
    MPPT?: number;
    ["SER#"]?: string;
    Relay?: string;
    Alarm?: string;
    LOAD?: string;
    dataTimeStamp: number;
    constructor(VEDirectRawData: Object);
}
export declare class VEDirectParser extends Transform {
    buffer: Buffer;
    rawDataBlock: Object;
    constructor();
    isChecksumValid(): boolean;
    _transform(dataChunk: any, encoding: any, callback: any): void;
}
